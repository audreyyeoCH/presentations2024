---
# title: ""
# subtitle: ""
# author: "Audrey Yeo"
# institute: ""
format: 
 revealjs:
    code-fold: false
    width: 1280
    height: 720
    chalkboard: true
preload-iframes: true
editor: 
  markdown: 
    wrap: 72
csl: apa-single-spaced.csl
footer: "Audrey Yeo"
---

```{r, echo = FALSE, warning = FALSE}
# Load relevant packages
library(testthat)
library(tidyverse)
library(flextable)
library(ggplot2)
library(float)
library(utils)
library(kableExtra)
library(formattable)
library(ggfun)
library(lattice)
library(devtools)
devtools::install_github("https://github.com/Genentech/phase1b", force = TRUE)
library(phase1b)
library(cowplot)
```

```{r global_options, include=FALSE}
knitr::opts_chunk$set(fig.pos = 'H')
```

```{r}
# Mode
Mode <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}
```


```{r}
# | fig-alt : "This hexagon is the R sticker for phase1b R package. It has a bright purple background, light orange border and the title is in fuschia. The graph in the middle is a CDF distribution in dots that changes from red dots to green dots to indicate a stop to go decision"
control = 0.6
thetaT_low = 0.6
result <- predprob(
  x = 16, n = 23, Nmax = 40, p = control, thetaT = thetaT_low,
  parE = c(0.6, 0.4)
)

thetaT_high = 0.9
result_high_thetaT <- predprob(
  x = 16, n = 23, Nmax = 40, p = control, thetaT = thetaT_high,
  parE = c(0.6, 0.4)
)
data = rbind(result$table, result_high_thetaT$table)

data$thetaT = c(rep("60%", 18), rep("90%", 18))
df_thetaTlow <- data %>% filter(thetaT == "60%") 
df_thetaTlow$cumul_x <- df_thetaTlow$counts + 16

df_thetaThigh <- data %>% filter(thetaT == "90%") 
df_thetaThigh$cumul_x <- df_thetaThigh$counts + 16
```


# A Bayesian approach to decision making in early development trials{background-iframe="rubik/dist/index.html"} 
\
\
**Audrey Yeo** 
\
M Nursing (Sydney), M Sci Biostats (Zürich)
\
Bristol Myers Squibbs 2025

  `This Quarto-rendered presentation has ALT text and as much as possible, uses colour-blind friendly palettes`

# Agenda

- Introduction & Motivation for Predictive Analytics at GPS
- Introducing `phase1b` 
  - Foundations of Beta-Binomial Posterior
  - Two types of Posteriors
  - Monte Carlo Simulation / Operating Characteristics
  - What's this for ?

# My Journey so far{.smaller}
\
\

::: columns
::: {.column width="22%"}       
```{r}
knitr::include_graphics("images/sydneyuni.jpeg", error = FALSE)
```
:::
::: {.column width="20%"}
```{r}
knitr::include_graphics("images/rch.jpg", error = FALSE)
```
:::
::: {.column width="20%"}
```{r}
knitr::include_graphics("images/roche1.jpg", error = FALSE)
```
:::
::: {.column width="13%"}
```{r}
knitr::include_graphics("images/hex3.png", error = FALSE)
```
:::
<!-- ::: {.column width="20%"} -->
<!-- ```{r} -->
<!-- knitr::include_graphics("images/ibk_k.jpeg", error = FALSE) -->
<!-- ``` -->
<!-- ::: -->
::: {.column width="15%"}
```{r}
knitr::include_graphics("images/openstatsware-hex.svg", error = FALSE)
```
:::
:::

# Career

::: columns
::: {.column width="60%"}       
\n
\n
-   Health Care/ Academia 2018-2020

        -   Uni of Zürich : 
            - TA for Probability Theory I 
            - RA for Center for Reproducible Science 
            - RA Development Econometrics
        
        -   Royal Children's Hospital
            - Registered Nurse, COVID ICU/ Neonatal ICU

-   joined Market Access at Roche mid 2021

        - RWD Enabling platform (Statistical Computing Environment, RWD assets, SQL, Redshift)
:::

::: {.column width="40%"}
\
```{r}
#| layout-ncol: 1
#| fig-width: 1
#| fig-height: 1
knitr::include_graphics("images/ibk1_indoor.jpeg", error = FALSE)

```
:::
:::


# Career 
::: columns
::: {.column width="60%"}  
*   joined R & D at Roche in mid 2022 :

        - Biostats Lead in Early Oncology Trials
        - Study Statistician for phase I-II, phase III trials
        - Led Roche/Genentech Dose Escalation on new SCE
        - Led the development of R package **phase1b**
        - Instructor for **Julia** Course Basel (Data Science, Quarto, ML modules)
        - Co-organiser and Presenter many Methodology seminars
        
-   `phase1b`'s world debut in 2024 :

        - PSI 2024
        - useR!2024 
        - R/Pharma 2024
        - Effective Statistician conference 
        - BMS, UBC, Roche/ Genentech
:::

::: {.column width="30%"}  
```{r}
#| layout-ncol: 1
#| fig-width: 1
#| fig-height: 1
knitr::include_graphics("images/PSI_Stand.jpg", error = FALSE)

```     
:::
:::

# Outlook 2025 {.smaller}
::: columns
::: {.column width="30%"}  
```{r}
#| layout-ncol: 1
#| fig-width: 1
#| fig-height: 1
knitr::include_graphics("images/ibk_outdoor.jpeg", error = FALSE)
```
:::
::: {.column width="0%"}  
  
:::
::: {.column width="50%"}  
\

- [ ] DAGStat Conference presentation on Bayesian Statistics

- [ ] ISCB pre-course on Good Software Engineering practices 

- [x] R/Pharma Summit Board

- [x] RoES conference submission

- [ ] CRAN submission for `phase1b`

- [ ] Improve Bouldering Grade to V6+
:::
:::

## **Analysts** are Strategic partners in the Pharma business :{.smaller}

... for therapeutics, we understand the combined Scientific and Business development of our assets such as (Subject Matter Expertise) :

-   Roadblocks, business assumptions and strategies
-   Scientific profiles of our assets e.g. half-life, storage properties
-   Target audience, regular and edge cases for use
-   Regulatory frameworks
  
Developing `phase1b` has **strengthened** my understanding of this **Strategic Partnership**

# About `phase1b` {.smaller}
:::: {.columns}
::: {.column width="60%"}
-   2015 : Started as a need in Roche's early development group, package development led by Daniel
    Sabanés Bové in 2015.

-   2023 : Refactoring, Renaming, adding Unit and Integration tests as current State-of-Art Software Engineering practice.

-   100% written in R and Open Source.

-   website :
    [genentech.github.io/phase1b/](genentech.github.io/phase1b/)

```{r, eval = FALSE, echo = TRUE, warning = FALSE}
library(devtools)
devtools::install_github("https://github.com/Genentech/phase1b")
library(phase1b)
```
:::
::: {.column width="40%"}
```{r, fig.align='center'}
# | fig-alt : "This hexagon is the R sticker for phase1b R package. It has a bright purple background, light orange border and the title is in fuschia. The graph in the middle is a CDF distribution in dots that changes from red dots to green dots to indicate a stop to go decision"
knitr::include_graphics(path = "images/hex3.png")
```
:::
:::

<!-- ## Terminology -->

<!-- - A "look" is a stop -->
<!-- - A stop is when a rule is applied -->
<!-- - The rule is specified for Go, Stop or Evaluate (Gray zone) -->
<!-- - If the rule is met, the result is Go, Stop or Evaluate (Gray zone) -->
<!-- - Rules are applied at interim or final  -->
<!-- - Go = Success = Efficacious -->
<!-- - Stop = Failure = Futile -->
<!-- - Rule = Criteria, e.g. Go rule is a Go Criteria -->

## Use case: {.smaller}

```{r, warning = FALSE}
# | fig-alt: This table sets the scene of a problem a study statistician could have. At interim, there are 16/23 responders and they ask, what is the Posterior Probability, what is the Predictive Posterior Probability, is the decision to Go (continue drug development), Stop (terminate drug development) or in between called the "Grey Zone" where team may need additional supporting evidence to make a decision.
alpha = 
r_interim = 16
n_interim = 23
r_final = 23
n_final = 40
data.frame( Example = c("Responders", 
                      "n", 
                      "Response rate", 
                      "Posterior probability*", 
                      "Predictive posterior probability*",  
                      "Decision to develop molecule further :\n Go/Stop/Grey Zone"),
            Interim = c(r_interim, 
                        n_interim, 
                        paste(
                          round(
                            (r_interim/n_interim)*100, 
                            digits = 2), 
                          "%"), 
                        "ask phase1b", 
                        "ask phase1b", 
                        "ask phase1b"),
            Final = c(r_final, 
                      n_final, 
                      paste(
                        round(
                          (r_final/n_final)*100, 
                          digits = 2), 
                        "%"), 
                      "ask phase1b", 
                      "-", 
                      "ask phase1b") ) -> use_case

use_case %>% kbl(align = "c", caption = "A single arm novel therapeutic with an assumed control response rate is at most 60%") %>% kable_styling()
```

# Prior and Posterior of Beta Distribution for $\pi${.smaller}

::: {.columns}
::: {.column width="50%"}
-   Conjugate Prior \pi is $f(\pi)$, where $\pi \sim {Beta(\alpha, \beta)}$,
    same family of distribution of Posterior
-   We know the mean response rate (RR) is :
    $$\pi = \ \frac {\alpha}{\alpha + \beta}$$
-   Likelihood is $f(x|\pi)$, where $x \sim {Binomial(x, n)}$
:::
::: {.column width="50%"}
-   The updated Posterior $f( \pi | x )$ is again a $Beta$ distribution (same family as
    prior) : $$ \pi| \ x \sim Beta(\alpha + x, \ \beta + n - x)$$ where $x$ is
    the number of responders of current trial
- Posterior Probability :         
$P (\pi > 60 \% | \alpha + x, \beta + n - x )$
- Predictive Posterior Probability :        
$P (success \ or \  failure \ at \ final)$
:::
:::

# Posterior formulation :

$$  f(\pi | x)  \propto \  \pi^{x} (1-\pi)^{n-x} * \frac {1}{B(\alpha, \beta)} \pi^{\alpha-1}(1-\pi)^{\beta-1} 
$$

- (weighted sum version)

$$  f(\pi | x)  \propto \  \pi^{x} (1-\pi)^{n-x} * \sum_{j = 1}^{k} \ w_j \frac {1}{B(\alpha_j, \beta_j)} \pi^{\alpha_j-1}(1-\pi)^{\beta_j-1} 
$$


## Updating the Posterior
Using the formula for the mean, mode and median, where :

- $\alpha = 0.6, \beta = 0.4$ and 
- interim x = 16, interim n = 23 :
\
 $$ \pi = \ \frac {\alpha}{\alpha + \beta} = \ \frac {\alpha_{updated} }{\alpha_{updated} + \beta_{updated}} = \ \frac {16.6 }{16.6 + 7.4} ≈ 69.17 \% $$
 
  $$ mode (\pi) = \ \frac {\alpha_{updated} -1 }{\alpha_{updated} + \beta_{updated} - 2} = \ \frac {16.6 -1  }{16.6 + 7.4 - 2} ≈ 70.90 \% $$
    $$ median ( \pi) ≈ \ \frac {\alpha_{updated}}{ \alpha_{updated} + \beta_{updated} - \frac{2}{3} } ≈ 69.71 \% $$

## Graphical representation of the updated Posterior{.smaller}
- Prior parameters are $\alpha$ = 0.6, $\beta$ = 0.4
- Updated Posterior parameters are $\alpha$ = 16.6 and $\beta$ =  7.4
```{r , fig.align='center'}
# | fig-pos : "H"
# | out-width: "300%" 
# | out-height : "300%"
# | fig-alt: This plot shows how the prior can be updated from data and compares with the uniform beta prior. 
alpha = 0.6
beta = 0.4
interim_x = 16
interim_n = 23
alpha_updated = alpha + interim_x
beta_updated = beta + interim_n - interim_x
new_mean = alpha_updated / (alpha_updated + beta_updated )
new_mode = (alpha_updated - 1) / (alpha_updated + beta_updated - 2)
new_median = (alpha_updated - (1/3)) / (alpha_updated + beta_updated - (2/3))
xx <- seq(0, 1, .001)

uniform = dbeta(xx, 1, 1) #https://stackoverflow.com/questions/21991688/r-beta-function-relative-y-scale
prior_param = dbeta(xx, 0.6,0.4)
updated_param = dbeta(xx, 16.6, 7.4)

data = data.frame(rate = rep(xx, 3),
                  Density = c(uniform, prior_param, updated_param),
                  Category = c(rep("Uniform Prior a = b = 1", length(xx)), rep("Prior a = 0.4, b = 0.6", length(xx)), rep("Updated Posterior a = 16.6, b = 7.4", length(xx))))


ggplot(data) + geom_line(aes(x = rate, y = Density, colour = Category), size = 1.0) +
   ggtitle("Historical prior and Updated posterior distribution from 16 responders\n of 23 at interim analysis for a single arm oncology trial") + 
  scale_x_continuous(n.breaks = 10, labels = scales::percent_format()) +
  ylab("Density") +
  xlab("Response Rate") +
theme(plot.title = element_text(size=15, family = "Helvetica")) +
  scale_color_manual(values = c("#56B4E9", "#CC79A7", "#009E73")) +
  scale_y_continuous(limits = c(0, 7)) +
  geom_vline(xintercept = new_median, linetype = "dashed", size = 0.5, colour = "#009E73") +
geom_vline(xintercept = new_mean, linetype = "dashed", size = 0.5, colour = "#009")
```

# Effect on varying weight on different priors Example 
```{r , fig.align='center'}
# | fig-pos : "H"
# | out-width: "300%" 
# | out-height : "300%"
# | fig-alt: This plot shows how the Mixture priors can be updated from data and compares with the uniform beta prior. 
a1 = 3
b1 = 12
weight1 = 0.6
weight2 = 0.4
alpha = a1
beta = b1
interim_x = 16
interim_n = 23
alpha_updated = alpha + interim_x
beta_updated = beta + interim_n - interim_x
new_mean = alpha_updated / (alpha_updated + beta_updated )
new_mode = (alpha_updated - 1) / (alpha_updated + beta_updated - 2)
xx <- seq(0, 1, .001)

dbetaMix1 = phase1b::dbetaMix(x = xx, 
                     par = rbind(c(1, 1)), 
                     weights = 1)
dbetaMix2 = phase1b::dbetaMix(x = xx, 
                     par = rbind(c(a1, b1)), 
                     weights = 1)
dbetaMix3 = phase1b::dbetaMix(x = xx, 
                     par = rbind(c(1, 1), c(a1, b1)), 
                     weights = c(weight1, weight2))
dbetaMix4 = phase1b::dbetaMix(x = xx, 
                     par = rbind(c(1, 1), c(a1, b1)), 
                     weights = c(weight2, weight1))
Mix1 = paste("Prior of a =", 1, ", b =", 1)
Mix2 = paste("Prior of a =", a1, "and b =", b1)
Mix3 = paste("Beta Mixture Prior:\n", weight1*100, "% weighting on uniform and\n", weight2*100, "% weighting on \nalpha =", a1, ", beta =", b1)
Mix4 = paste("Beta Mixture Prior:\n", weight2*100, "% weighting on uniform and\n", weight1*100, "% weighting on \nalpha =", a1, ", beta =", b1)
new_mean = a1/ sum(a1+ b1)

data = data.frame(rate = rep(xx, 4),
                  Density = c(dbetaMix1, dbetaMix2, dbetaMix3, dbetaMix4),
                  Category = c(rep(Mix1, length(xx)), 
                               rep(Mix2, length(xx)), 
                               rep(Mix3, length(xx)),
                               rep(Mix4, length(xx))))

ggplot(data) + geom_line(aes(x = rate, y = Density, colour = Category), size = 1.0) +
   ggtitle("Effect of diverse weighting contribution to Beta Mix Prior") + 
  scale_x_continuous(n.breaks = 10, labels = scales::percent_format()) +
  ylab("Density") +
  xlab("Response Rate") +
theme(plot.title = element_text(size=15, family = "Helvetica")) +
  scale_color_manual(values = c("#009E73", "#000", "#CC79A7", "#56B4E9")) +
  scale_y_continuous(limits = c(0, 5))
```





## A variety of Priors{.smaller}

- To illustrate how density of Prior changes with increased sample size even though mean is the same
```{r ,fig.align='center', eval = TRUE}
# | out-width: "70%" 
# | fig-alt: This plot shows how the priors of mean 50% can have improving precision with increased sample size. 
xx <- seq(0, 1, .001)

data = data.frame(
  rate = rep(xx, 4),
  Density = c(dbeta(xx, 10, 10), 
              dbeta(xx, 20, 20), 
              dbeta(xx, 30, 30), 
              dbeta(xx, 40, 40) ),
  Category = c(rep("alpha = beta = 10", length(xx)), 
               rep("alpha = beta = 20", length(xx)), 
               rep("alpha = beta = 30", length(xx)),
               rep("alpha = beta = 40", length(xx)) 
  )
)

ggplot(data) + geom_line(aes(x = rate, y = Density, colour = Category), size = 1.0) +
   ggtitle("Priors of mean 50% can have improving precision with increased sample size") + 
  scale_x_continuous(n.breaks = 10, labels = scales::percent_format()) +
  ylab("Density") +
  xlab("Response Rate") +
  geom_vline(xintercept = 0.5, linetype = "dotted", colour = "blue") +
theme(plot.title = element_text(size=15, family = "Helvetica")) +
  scale_color_manual(values = c("#56B4E9", "#CC79A7", "#009E73", "blue")) +
  scale_y_continuous(limits = c(0, 8)) 
```

## A variety of Posteriors{.smaller}

- To illustrate how density of Posterior changes with increased sample size even though mean is the same

```{r, fig.align='center'}
# | out-width: "70%" 
# | fig-alt: This plot shows how the priors of mean 50% can have improving precision with increased sample size. 
x = 16
n = 23
final_n = 40
length = length(0:final_n)

data11 = data.frame(
  rate = rep(0:final_n, 4),
  Density = c(dbetabinomMix(x = 0:final_n, 
                            m = final_n, 
                            par = rbind(c(10 + x, 10 + n - x)),
                            weights = 1), 
              dbetabinomMix(x = 0:final_n, 
                            m = final_n, 
                            par = rbind(c(20 + x, 20 + n - x)), 
                            weights = 1),
              dbetabinomMix(x = 0:final_n, 
                            m = final_n, 
                            par = rbind(c(30 + x, 30 + n - x)),
                            weights = 1), 
              dbetabinomMix(x = 0:final_n, 
                            m = final_n, 
                            par = rbind(c(40 + x, 40 + n -x)),
                            weights = 1)),
  Category = c(rep("alpha = beta = 10", length), 
               rep("alpha = beta = 20", length), 
               rep("alpha = beta = 30", length),
               rep("alpha = beta = 40", length) 
  )
)

ggplot(data11) + geom_line(aes(x = rate, y = Density, colour = Category), size = 1.0) +
   ggtitle("Updated Posteriors of Priors of mean 50% with increasing sample size and \ndata is 16 of 23 responders") + 
  ylab("Density") +
  xlab("Response Rate") +
  scale_x_continuous(breaks = seq(0, 40, by = 4)) +
  geom_vline(xintercept = 0.5*final_n, linetype = "dotted", colour = "blue") +
theme(plot.title = element_text(size=15, family = "Helvetica")) +
  scale_color_manual(values = c("#56B4E9", "#CC79A7", "#009E73", "blue")) 
```





```{r}
# 2 mins
# The benefit of a Bayesian approach is the possibility to account for prior data (Thall &amp; Simon,
# 1994) in that a new drug may have shown some signals of efficacy owing to its proposed
# mode of action, or similar activity based on prior data.
# show graph of go, stop, eval zones 
## Terminology

# - A "look" is a stop
# - A stop is when a rule is applied
# - The rule is specified for Go, Stop or Evaluate (Grey zone)
# - If the rule is met, the result is Go, Stop or Evaluate (Grey zone)
# - Rules are applied at interim or final 
# - Go = Success = Efficacious
# - Stop = Failure = Futile
# - Rule = Criteria, e.g. Go rule is a Go Criteria

```



## `postprob()` example (Lee & Liu, 2008){.smaller}

```{r}
r_interim = 16
n_interim = 23
r_final = 23
n_final = 40
soc_rr = 0.60
soc_rr_percent = paste(soc_rr*100, "%")
data.frame( Example = c("Responders", 
                      "n", 
                      "Response rate", 
                      "Standard of Care Response rate",
                      "Posterior probability"), 
            Interim = c(r_interim, 
                        n_interim, 
                        paste(
                          round(
                            (r_interim/n_interim)*100, 
                            digits = 2), 
                          "%"), 
                        soc_rr_percent,
                        "postprob( ) call from phase1b" )) -> use_case

use_case %>% kbl(align = "c") %>% kable_styling(font_size = 25)
```

```{r, echo = TRUE, warning = FALSE}
phase1b::postprob(x = 16, n = 23, p = 0.60, par = c(0.6, 0.4))
```


# Posterior Probability{.smaller}

- Interim trial is efficacious if posterior probability exceeds 70% or P( RR ≥ 60 % | data ) > 70\% 

```{r, fig.align='center'}
#| label: fig-post
#| layout-ncol: 1 # make graph bigger
#| column: page-right
#| fig-alt : "This graphs side by side show that by increasing number of responders out of 23 reaches our TPP threshold"
TPP = 0.6
n =23
plotthis = data.frame(x = c(0:n),
                      posterior = c(phase1b::postprob(x = 0:n,  #P(RR ≥ TPP | x, a, b)
                                             n = n,
                                             p = TPP,
                                             par =
                                                 c(0.6, 0.4))))
plotthis$success = c(rep("FALSE", 15), rep("TRUE", 9)) #P(RR ≥ TPP | x, a, b) > 70%



ggplot(plotthis) +
  geom_point(aes(x = x,
                 y = posterior,
                 col = success,
                 size = 5)) +
  ggtitle(paste("Posterior probability that Response Rate ≥ 60% given number of responders with ",n, "patients.")) +
  ylab("Posterior Probability") +
  xlab("Number of responders") +
  scale_x_continuous(breaks = seq(0, n, by = 2)) +
  theme(text = element_text(size = 20)) +
  scale_color_manual(values = c("#D55E00", "#009E73")) + 
  theme_gray(base_size = 13) +
  geom_vline(aes(xintercept = 15), colour = "purple", linetype = "dashed")
```

## Beta prior mixture{.smaller}

<!-- {\displaystyle {\frac {\alpha -1}{\alpha +\beta -2}}\!}  -->

- `phase1b` facilitates the flexibility of using various priors and its respective weightings:

                 Prior is P_E ~ sum(weights * beta(parE[, 1], parE[, 2]))

```{r, echo = TRUE, results='hide'}
a = phase1b::postprob(x = 16,
             n = 23,
             p = 0.60,
             parE = c(0.6, 0.4), weights = 1)

b = phase1b::postprob(x = 16,
             n = 23,
             p = 0.60,
             parE = c(2, 4), weights = 1)

0.5*(a + b)

phase1b::postprob(x = 16,
             n = 23,
             p = 0.60,
             parE = rbind(c(0.6, 0.4), c(2, 4)), weights = c(0.5, 0.5))
```


- Posterior formulation :

$$  f(\pi | x)  \propto \  \pi^{x} (1-\pi)^{n-x}\sum_{j = 1}^{k} \ w_j \frac {1}{B(\alpha_j, \beta_j)} \pi^{\alpha_j-1}(1-\pi)^{\beta_j-1} 
$$

## `predprob()` example (Lee & Liu, 2008){.smaller}
```{r}
r_interim = 16
n_interim = 23
r_final = 23
n_final = 40
soc_rr = 0.60
soc_rr_percent = paste(soc_rr*100, "%")
data.frame( Example = c("Responders", 
                      "n", 
                      "Response rate", 
                      "Standard of Care Response rate",
                      "Predictive Posterior probability"), 
            Interim = c(r_interim, 
                        n_interim, 
                        paste(
                          round(
                            (r_interim/n_interim)*100, 
                            digits = 2), 
                          "%"), 
                        soc_rr_percent,
                        "predprob( ) call from phase1b")) -> use_case
use_case %>% kbl(align = "c") %>% kable_styling(font_size = 20)
```


```{r, echo = TRUE, warning = FALSE}
control = 0.6
confidence_seventy = 0.7
result <- phase1b::predprob(
  x = 16, n = 23, Nmax = 40, p = control, thetaT = confidence_seventy,
  parE = c(0.6, 0.4)
)
result$result
confidence_ninety = 0.9
result_high_thetaT <- phase1b::predprob(
  x = 16, n = 23, Nmax = 40, p = control, thetaT = confidence_ninety,
  parE = c(0.6, 0.4)
)
result_high_thetaT$result
```

## Predictive Posterior Probability 

### Two contexts this could be useful in :
1. We're at interim, we want to know what is our Predictive Posterior Probability is .... 
  - Did we hit the mark for a Success / Failure ?
2. We're designing an experiment (A/B Testing), and ask : What does a good result look like ?
  - Design a Success / Failure criteria such that it is relevant to our business (e.g. risk appetite)

<!-- ## Context : -->

<!--       We have 16/23 successes at interim. Potentially 17 patients left to enrol making a total of 40 patients. Technically, 17/17 patients can be responders. If this happens, technically, we can have 33/40 responders. -->

<!-- 1. Is this interim result a good indicator of success at final ? -->
<!-- 2. Given these results, what criteria of success at interim show positive signs of success at final ?  -->

## Predictive Posterior Probability 
\n
\n
      Predictive Posterior Probability is the Posterior probability of additional responders.
\n

            (Note : 40 - 23 = 17 remaining patients. Potentially 16 + 17 responders at final = 33)

```{r}
#| label: fig-histogram
#| fig-cap: "Predictive Posterior CDF for different Efficacy Rules"
#| fig-subcap:
#|   - $P (\pi > 0.6 | \ data )$ > 70% #"Efficacious if Pred. Posterior Prob > 60 %" 
#|   - $P (\pi > 0.6 | \ data )$ > 90% #"Efficacious if Pred. Posterior Prob > 90 %" 
#| layout-ncol: 2 # make graph bigger
#| column: page-right
#| fig-alt : "These two graphs side by side show that by increasing the threshold for an Efficacy or Go decision, the number of responders out of 40 is higher with the higher threshold, ie 35 patients instead of 32 patients of 40"

ggplot(df_thetaTlow) +
  geom_point(aes(x = counts, y = posterior, colour = success, size = 8)) +
  scale_x_discrete(limits = c(seq(0, 33, by = 1))) +
  xlab("\nFuture successful reponders") +
  ylab("Probability\n") +
  ggtitle("With lower threshold : \n25 of 40 responders needed to achieve a Go decision")  +
  theme(text = element_text(size = 20)) +
  scale_color_manual(values = c("#D55E00", "#009E73")) +
  geom_vline(aes(xintercept = 9), linetype="dashed", size = 1, colour = "purple")

ggplot(df_thetaThigh) +
  geom_point(aes(x = counts, y = posterior, colour = success, size = 8)) +
   scale_x_discrete(limits = c(seq(0, 33, by = 1))) +
    xlab("\nFuture successful reponders") +
  ylab("Probability\n") +
  ggtitle("With higher threshold : \n28 of 40 responders needed to achieve a Go decision") +
  theme(text = element_text(size = 20)) +
  scale_color_manual(values = c("#D55E00", "#009E73")) +
  geom_vline(aes(xintercept = 12), linetype="dashed", size = 1, colour = "purple")
```

## Operating Characteristics : Monte Carlo Simulations and threshold for Success (and Failure){.smaller} 
- Efficacy criteria, e.g. we would stop for Efficacy (Success) if :
`Pr( RR > p1) > tU`
- Futility criteria, eg. we would stop for Futility (Failure) if :
`Pr( RR < p0) > tL`

```{r, echo = FALSE}
#| fig-width: 10
#| fig.height: 5
#| fig.align: "center"

simline_data <- data.frame(
  time = c(0, 23, 40),
  event = c("Start", "Apply Go/Stop Rule \n at Interim (23)", "Apply Go/Stop Rule \n at Final (40)")
)
# Create the simulation line plot
ggplot(simline_data, aes(x = time, y = 0)) + 
  geom_line(color = "navy", linewidth = 1.5) +  # Customize line appearance
  geom_point(color = "orange", size = 5) +       # Add points for the events
  geom_text(aes(label = event, y = 0.2),  # Add labels above the points
            vjust = 0, hjust = 0.5,     # Adjust label position
            color = "lavender", size = 4) +
  scale_x_continuous(breaks = simline_data$time,  # Set x-axis breaks
                     labels = simline_data$event, # Set x-axis labels
                     limits = c(-1, 45)) +       # Set axis limits for better visualization
  scale_y_continuous(limits = c(-0.05, 0.05)) +
  theme_classic() +  
  theme(axis.text.x = element_text(size = 15)) +
  theme(axis.line.y = element_blank()) +
  theme(axis.ticks.y = element_blank()) +
  theme(axis.title.y = element_blank()) +
  theme(axis.text.y = element_blank()) +
  theme(axis.title.x = element_blank()) +
  theme(axis.text.x = element_blank()) +
   theme(axis.line.x = element_blank()) +
  theme(axis.ticks.x = element_blank()) +
  geom_text(aes(x = 23, y = 0.02, label = "Apply Go / Stop rule \n at Interim (23)"), size = 6) +
   geom_text(aes(x = 40, y = 0.02, label = "Apply Go / Stop rule \n at Final (40)"), 
             size = 6)  +
   geom_text(aes(x = 0, y = 0.02, label = "Start (0)"), 
             size = 6) -> sim_line

sim_line

```
## Rules and Operating characteristics. A use case for `ocPostprob()`:{.smaller} 

-   ***Stop for Efficacy: Go if $P( \pi > 60\% | \ data ) > 90 \%$***
-   ***Stop for Futility: Stop if $P( \pi < 60\% | \ data ) > 70 \%$***
-   Prior of treatment arm $Beta(0.6, 0.4)$.

```{r, echo = TRUE, warning = FALSE}
set.seed(2025)
res <- phase1b::ocPostprob(
  nnE = c(23, 40), 
  truep = 0.60, 
  p0 = 0.60, 
  p1 = 0.60, 
  tL = 0.70, 
  tU = 0.90, 
  parE = c(0.6, 0.4),
  sim = 500, 
  wiggle = TRUE, 
  nnF = c(23, 40)
)
```

```{r, echo = FALSE}
# representing the results in a nice, interpretable table 
res$oc %>% 
  mutate(across(starts_with("Pr"), ~ .*100)) %>% 
  mutate(across(starts_with("Pr"), ~ paste(., "%"))) %>%
  mutate(across(starts_with("Expected"), ~ round(., digits = 0))) %>% 
  kableExtra::kable() %>% 
  kable_classic(lightable_options = "hover", html_font = "\"Source Sans Pro\", helvetica, sans-serif") -> oc_tab

```
## Results{.smaller}

```{r, echo = FALSE, warning = FALSE}
oc_tab
```
```{r, echo = FALSE, warning = FALSE}
#| fig-width: 10
#| fig.height: 5
#| fig.align: "center"
sim_line
```
- At n = 34, we have some **useful results (we did not have to evaluate 40!)**
- 1/3 of results are known at interim, most of these results are in the **Gray Zone**
- ~ 1/2 of results are also at the Gray Zone
- It may be *entirely ok to stop at 34 patients*


## Expanded features {.smaller}
.... and wiggle room!

```{r}
# | fig-alt: "This table has on the first column other phase1b call functions and on the next columns, have check boxes that show Features like SOC uncertainty, single-arm, two-arm ,simulation , plotting and boundaries" 
Features <- read.csv(file = "phase1b_FeatureTable - Sheet1.csv", header = TRUE, sep  = ",")
names(Features) <- c(" ", "SOC uncertainty", "single-arm", "two-arm", "simulation", "plotting", "boundaries")
Features[is.na(Features)] <- ""
Features[Features == 1] <- "✔️"
# what are these features, diff between two arm and randomisation say what kind of trials this can support
Features %>% kbl(align = "c") %>% kable_styling(position = "center", font_size = 18) %>% kableExtra::kable_classic(lightable_options = "hover", html_font = "\"Source Sans Pro\", helvetica, sans-serif") 
```

# Some references {.smaller}

-   Thall P F, Simon R (1994), Practical Guidelines for Phase IIB
    Clinical Trials, Biometrics, 50, 337-349

-   Lee J J, Liu D D (2008), A Predictive probability design for phase
    II cancer clinical trials, 5(2), 93-106, Clinical Trials

-   Yeo, A T, Sabanés Bové D, Elze M, Pourmohamad T, Zhu J, Lymp J,
    Teterina A (2024). Phase1b : Calculations for decisions on Phase 1b
    clinical trials. R package version 1.0.0,
    <https://genentech.github.io/phase1b>
    
-   **Inclusive Speaker Orientation [Linux Foundation](https://training.linuxfoundation.org/training/inclusive-speaker-orientation/)**
-   **Zeileis, Fisher, Hornik, Ihaka, McWhite, Murrell, Stauffer, Wilke (2020) colorspace: A Toolbox for Manipulating and Assessing Colors and Palettes. Journal of Statistical Software.**

# Thanks{background-iframe="rubik/index.html"} 

**Audrey Yeo** 
\
M Nursing (Sydney), M Sci Biostats (Zürich)
\
Bristol Myers Squibbs

- [Code for this talk](https://github.com/audreyyeoCH/presentations2024/tree/main/2024_talks_in_quarto)
- [Visit my website](audreyyeoCH.github.io)
- [LinkedIn](www.linkedin.com/in/audrey-yeo-8000)
- [My GitHub repo]( github.com/audreyyeoCH)

# Effect on varying weight on different priors Example 2
```{r , fig.align='center', echo = FALSE, eval = TRUE}
# | fig-pos : "H"
# | out-width: "300%" 
# | out-height : "300%"
#| layout-ncol: 2 # make graph bigger
# | fig-alt: This plot shows how the Mixture priors can be updated from data and compares with the uniform beta prior. 
uniform_alpha = 1
uniform_beta = 1
alpha = 3 
beta = 12
interim_x = 16
interim_n = 23
final_n = 40
alpha_updated = alpha + interim_x
beta_updated = beta + interim_n - interim_x
uniform_mean = 0.5
uniform_mean_updated = (uniform_alpha + interim_x) / (uniform_alpha + interim_x + uniform_beta + interim_n - interim_x)
non_uniform_mean = alpha / sum(alpha, beta)
non_uniform_mean_updated = alpha_updated / (alpha_updated + beta_updated + interim_n)
non_uniform_mode_updated = (alpha_updated - 1) / (alpha_updated + beta_updated - 2)
beta_binomMix_mean = (0.2*(uniform_mean_updated) + 0.8*(non_uniform_mean_updated))*final_n
xx <- seq(0, 1, .001)
weight1 = 0.8
weight2 = 0.2

dbetaMix1 = dbetaMix(x = xx, par = rbind(c(uniform_alpha, uniform_beta)), weights = 1)
dbetaMix2 = dbetaMix(x = xx, par = rbind(c(alpha, beta)), weights = 1)
dbetabinomMix3 = dbetabinomMix(x = 0:40, 
                               m = 40, 
                               par = rbind(c(uniform_alpha + interim_x, 
                                             uniform_beta + interim_n - interim_x), 
                                           c(alpha + interim_x, 
                                             beta + interim_n - interim_x)), 
                               weights = c(0.8, 0.2))

dbetabinomMix3 = dbetabinomMix(x = 0:40, 
                               m = 40, 
                               par = rbind(c(1, 1), 
                                           c(3, 12)), 
                               weights = c(0.8, 0.2)) 


dbetabinomMix4 = dbetabinomMix(x = 0:40, 
                               m = 40, 
                               par = rbind(c(1, 1), 
                                           c(3, 12)), 
                               weights = c(0.2, 0.8)) 

data0 <-  data.frame(rate = rep(xx, 2),
                  Density = c(dbetaMix1, dbetaMix2),
                  Category = c(rep("Uniform Prior", length(xx)), 
                               rep(paste0("Beta(", alpha, ",", beta, ")"), length(xx))))

data1 <- data.frame(responders = rep(c(seq(0, 40, 1)), 2),
                    Density = c(dbetabinomMix3, dbetabinomMix4),
                    Category = c( rep("80% weighted on Uniform Prior", 41), rep("20% weighted on Uniform Prior", 41) ))

                    
p1 <- ggplot(data0) + geom_line(aes(x = rate, y = Density, colour = Category), size = 1.0) +
  ggtitle("Priors of Beta(1,1) and Beta(3, 12)") + 
  scale_x_continuous(n.breaks = 10, labels = scales::percent_format()) +
  ylab("Density") +
  theme(axis.text = element_text(size=15), 
        axis.title = element_text(size=17),
        legend.text = element_text(size = 15), 
        plot.title = element_text(size = 20),
        legend.position = "bottom", 
        legend.title = element_text(size = 17)) 

p2 <- ggplot(data1) + geom_line(aes(x = responders, y = Density, colour = Category), size = 1.0) +
  ggtitle("Updated Beta Binomial Mixture Posterior") + 
  ylab("Density") +
  xlab("Number of Responders") +
  scale_x_continuous(breaks = seq(0, 40, by = 5)) +
  theme(axis.text = element_text(size=15), 
        axis.title = element_text(size=17),
        legend.text = element_text(size = 15), 
        plot.title = element_text(size = 20),
        legend.position = "bottom",
        legend.title = element_text(size = 17))

```

```{r}
#| layout-ncol: 2 # make graph bigger
#| column: page-right
#| fig-alt : "These two graphs side by side show that by increasing the threshold for an Efficacy or Go decision, the number of responders out of 40 is higher with the higher threshold, ie 35 patients instead of 32 patients of 40"

p1
p2
```


## State-of-Art R software/packages are currently valuable because it makes robust analysis, faster. One example is the `phase1b` {.smaller}

In a nutshell : 
\
A robust, reliable and reproducible tool that calculates the Bayesian posterior probability             and predictive posterior probability.

What is a state-of-art tool ? Check out a past workshop [here](https://openpharma.github.io/workshop-r-swe-sf/listing.html)

- Integrative and Unit testing
- Example and good documentation
- Assertions on input arguments and internal results that get passed on
- Check expected and actual results

## Talks 2025 {.smaller}

```{r}
# | fig-alt: "This table has on the first column other phase1b call functions and on the next columns, have check boxes that show Features like SOC uncertainty, single-arm, two-arm ,simulation , plotting and boundaries" 
talks2025 <- read.csv(file = "Talks2024_2025_.csv", header = TRUE, sep  = ",")
talks2025 %>% slice(c(-1:-19)) -> talks2025
# names(Features) <- c(" ", "SOC uncertainty", "single-arm", "two-arm", "simulation", "plotting", "boundaries")
# Features[is.na(Features)] <- ""
# Features[Features == 1] <- "✔️"
# what are these features, diff between two arm and randomisation say what kind of trials this can support
talks2025 %>% kbl(align = "c") %>% kable_styling(position = "center", font_size = 15) %>% kable_classic(lightable_options = "hover", html_font = "\"Source Sans Pro\", helvetica, sans-serif") %>% kable_minimal() 
```

# Associations

```{r}
# | fig-alt: "This table has on the first column other phase1b call functions and on the next columns, have check boxes that show Features like SOC uncertainty, single-arm, two-arm ,simulation , plotting and boundaries" 
talks <- read.csv(file = "Associations.csv", header = TRUE, sep  = ",")
# talks <- talks[-1,]
talks %>% kbl(align = "c") %>% kable_styling(position = "center", font_size = 15) %>% kable_classic(lightable_options = "hover", html_font = "\"Source Sans Pro\", helvetica, sans-serif") %>% kable_minimal() 
```










